name: Test CI

on:
  push:
    branches: [ main, develop, feature/*, hotfix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Explore project structure
      run: |
        echo "Finding Jest setup files..."
        find . -name "setupDatase.ts" -o -name "setupTestDB.ts" -o -name "*.test.ts"
        
        echo "Checking Jest configuration..."
        if [ -f "jest.config.js" ]; then
          cat jest.config.js
        elif [ -f "jest.config.ts" ]; then
          cat jest.config.ts
        fi
        
        echo "Looking for Prisma schema..."
        find . -name "schema.prisma"
        
    - name: Create .env.test file
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/testdb" > .env.test
        cat .env.test
        
    - name: Generate Prisma client
      run: npx prisma generate --schema=$(find . -name "schema.prisma" | head -n 1)
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Run tests with detailed output
      run: NODE_ENV=test npx jest --detectOpenHandles --verbose
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        NODE_ENV: test